/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StudentWithGroup } from './StudentWithGroup';
import {
    StudentWithGroupFromJSON,
    StudentWithGroupFromJSONTyped,
    StudentWithGroupToJSON,
} from './StudentWithGroup';

/**
 * 
 * @export
 * @interface StudentList
 */
export interface StudentList {
    /**
     * 
     * @type {Array<StudentWithGroup>}
     * @memberof StudentList
     */
    students: Array<StudentWithGroup>;
    /**
     * 
     * @type {number}
     * @memberof StudentList
     */
    count: number;
    /**
     * 
     * @type {number}
     * @memberof StudentList
     */
    skip: number;
    /**
     * 
     * @type {number}
     * @memberof StudentList
     */
    take: number;
}

/**
 * Check if a given object implements the StudentList interface.
 */
export function instanceOfStudentList(value: object): value is StudentList {
    if (!('students' in value) || value['students'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('skip' in value) || value['skip'] === undefined) return false;
    if (!('take' in value) || value['take'] === undefined) return false;
    return true;
}

export function StudentListFromJSON(json: any): StudentList {
    return StudentListFromJSONTyped(json, false);
}

export function StudentListFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudentList {
    if (json == null) {
        return json;
    }
    return {
        
        'students': ((json['students'] as Array<any>).map(StudentWithGroupFromJSON)),
        'count': json['count'],
        'skip': json['skip'],
        'take': json['take'],
    };
}

export function StudentListToJSON(value?: StudentList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'students': ((value['students'] as Array<any>).map(StudentWithGroupToJSON)),
        'count': value['count'],
        'skip': value['skip'],
        'take': value['take'],
    };
}

